#!/bin/sh

TMP=$(mktemp -d)
trap "rm -Rf $TMP" EXIT

# Simple and naive implementation of realpath for macOS
realpath() {
  file=$1
  case "$file" in
    /*)
      printf '%s' "$file"
      ;;
    *)
      printf '%s' "$PWD/${file#./}"
      ;;
  esac
}

# Handle disconnected sessions
if test -n "$KAKOUNE_SESSION"; then
  exist=false
  valid=false
  kak -l > $TMP/session-list
  while read session; do
    if test "$session" = "$KAKOUNE_SESSION"; then
      exist=true
      valid=true
      break
    fi
    if test "$session" = "$KAKOUNE_SESSION (dead)"; then
      exist=true
      valid=false
      break
    fi
  done < $TMP/session-list
  if test "$exist" = true -a "$valid" = false; then
    kak -clear
    kak -d -s "$KAKOUNE_SESSION"
  elif test "$exist" = false; then
    kak -d -s "$KAKOUNE_SESSION"
  fi
fi

if test "$KAKOUNE_SESSION" -a "$KAKOUNE_CLIENT"; then
  commands=
  # Ignore options
  if test "$1" = '--'; then
    shift
  fi
  # Support to target line and column for the first file
  # $ kak {file} +{line}:{column}
  if test $# -ge 2; then
    file=$(realpath "$1")
    target=$2
    case "$target" in
      +*:*)
        line=${target#+}; line=${line%:*}
        column=${target#*:}
        commands="edit %($file) %($line) %($column)"
        shift 2
        ;;
      +*)
        line=${target#+}; line=${line%:*}
        commands="edit %($file) %($line)"
        shift 2
        ;;
    esac
  fi
  for file do
    commands="edit %($(realpath "$file")); $commands"
  done
  printf 'evaluate-commands -client %%(%s) %%(%s)' "$KAKOUNE_CLIENT" "$commands" | kak -p "$KAKOUNE_SESSION"
elif test "$KAKOUNE_SESSION"; then
  kak -c "$KAKOUNE_SESSION" "$@"
else
  kak "$@"
fi
